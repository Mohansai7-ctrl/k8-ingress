apiVersion: apps/v1
kind: Deployment
metadata:
  name: app2
  labels:
    name: app2
    tier: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      name: app2
      tier: frontend
  template:
    metadata:
      labels:
        name: app2
        tier: frontend
    spec:
      containers:
      - name: app2
        image: mohansai7/app2:v1

---
apiVersion: v1
kind: Service
metadata:
  name: app2
selector:
  name: app2
  tier: frontend
ports:
- name: nginx-svc-port
  protocol: TCP
  port: 80
  targetPort: 80

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app2
  annotations:
    #kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:022499022353:certificate/03d12fc8-f497-407d-8ecd-f067e0f61136
    alb.ingress.kubernetes.io/listen-ports: '[ {"HTTPS", 443} ]'
    alb.ingress.kubernetes.io/tags: Environment=dev,Team=test
    alb.ingress.kubernetes.io/group.name: expense #This grp indicates that created alb will be in this grp expense, and as this is the same group for app1 also, now this ingress lb routes traffic to ingress to ingress rules -> service => pods(app1 and app2 pods)
spec:
    ingressClassName: alb
    rules:
    - host: "app2.mohansai.online"
      http:
        paths:
        - pathType: Prefix
          path: "/"
          backend:
            service:
              name: app2
              port:
                number: 80